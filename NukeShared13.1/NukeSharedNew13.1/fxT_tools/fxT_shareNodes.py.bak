"""======================================================================================================================
DEVELOPER: Tor Andreassen
DATE: October 25, 2020
VERSION: v1.4

DESCRIPTION:
    Tool to share nodes between users right from inside nuke.
    Users can share nodes by the click of a button. Other users can then go and grab these shared scripts.

    Users can share up to 10 files (older files will be removed to avoid filling the server with unlimited files)
    When the user grabs any shared nodes from another user, they will get the latest created one by date.
    The limit of sharing 10 files is just so that if you know you shared something a bit ago but shared something else later,
    you can go back to the folder and find what you shared (small safe buffer).

    To grab something someone shared, you just pick the user from a dropdown menu, and then you can paste it in your nodegraph
    (when picking the user from the dropdown, the shared file gets copied to the clipboard)
    
    The user folders, are created when someone shares a set of nodes, its grabbed from the system, so no need to
    manually set up folder structures. This script also loops through all the user folders and finds the latest shared script,
    so all the creation of folder structurs are automated.


USAGE:
    Copy this python file into your .nuke directory/fxT_tools, or where you choose to install the tool.

    On line 89 in this script, set the path to the root of where users shared scripts will be saved.
    PS: This path must be somewhere on the server so that all users can access it (read/write rights).
   
    put this in your menu.py file:
        import fxT_shareNodes

    make the script visable to Nuke by adding a plugin path to the init.py file (example below)
        nuke.pluginAddPath('./fxT_tools')

    To open the tool inside Nuke, just add the new pane, it will be available under 'Windows/Custom/fxT_shareNodes'
    Yo can save a new Workspace with the tool added for easy access the next time Nuke is opened.

NOTES:
    Make sure all computers on the network has read/write acess to the tempPath folder (see line 86 in this python file)

    If a user is deleted (in the event of a compositor leaving a company for example),the userfolder will still exist,
    so there is no auto delete if the user don't exist on the network any more. Users can still grab their shared files,
    but to remove that user from the drop down, their folders has to be removed manually.

======================================================================================================================"""
import os, nuke, nukescripts
import getpass, random, string, glob


try:
    if nuke.NUKE_VERSION_MAJOR < 11:
        from PySide import QtCore, QtGui, QtGui as QtWidgets
        from PySide.QtCore import Qt
    else:
        from PySide2 import QtWidgets, QtGui, QtCore
        from PySide2.QtCore import Qt
except ImportError:
    from Qt import QtCore, QtGui, QtWidgets


class nukeShare(nukescripts.PythonPanel):

    def __init__(self):
        nukescripts.PythonPanel.__init__(self, 'fxT_shareNodes', 'com.fxt.fxT_shareNodes')
      
        #create buttons
        #calling this file when button is pushed by saying: fxT_shareNodes().nukeShare()
        self.shareButton = nuke.PyScript_Knob('share selected nodes','Share Nodes','fxT_shareNodes.nukeShare().share()')
        self.updateButton = nuke.PyScript_Knob('update to view all the latest shared nodess','Update','fxT_shareNodes.nukeShare().update()')      
        
        #create divider line
        self.divline01 = nuke.Text_Knob("","","")
        self.divline02 = nuke.Text_Knob("","","")
        self.divline03 = nuke.Text_Knob("","","")

        #create some text info for the users
        self.info = nuke.Text_Knob("","","SHARE NODES:\nSelect the nodes you want to share,\nthen click the Share Nodes-button.\n\n\nGET NODES:\nClick the Update-button, then pick the\nuser you want to copy nodes from\n in the dropdown menu.\n\nIMPORT:\nUse CTRL+V to paste the shared nodes\ndirectly in the nodegraph.\n")

        #self.pathinfo = nuke.Multiline_Eval_String_Knob('latest available tempShares, click get-button to update info', '','')
        self.copyright = nuke.Text_Knob("","","<font color='#838383'>// fxT_shareNodes v1.4 &#169; Tor Andreassen</font>")

        self.lastShare = nuke.String_Knob('path', '')
        self.lastShare.setValue('click update first')
        self.lastShare.setEnabled(False)

        self.dropdown = nuke.Enumeration_Knob('Users', 'User:', [''])

        # Set the path below to the folder where shared nukeScripts will be stored for all users:
        self.tempPath = '/core/SlateX/Artists/Users/assets/nuke/public/fxT_shareNodes'

        #add buttons to pane
        self.addKnob(self.shareButton)
        self.addKnob(self.updateButton)
        self.addKnob(self.divline01)
        self.addKnob(self.info)
        self.addKnob(self.divline02)

        self.addKnob(self.dropdown)

        self.addKnob(self.lastShare)
        
        self.addKnob(self.divline03)
        self.addKnob(self.copyright)

    def resetSel(self):
        for each in nuke.allNodes():
            each.knob("selected").setValue(False)


    def share(self):

        #if there is any selected nodes; dump selected nodes into a temp path and write it to clipboard
        #for easy sharing with other team members

        #set up user folder paths
        username = getpass.getuser()
        path = self.tempPath
        user_folder = path+username+'/'


        #generate list to check if there is any selected nodes
        nodeCount = []
        for i in nuke.selectedNodes():
            nodeCount.append(i.name())

        #if users folder does not exist, make it if there is any selected nodes
        if len(nodeCount)>0:
            if not os.path.exists(user_folder):
                os.makedirs(user_folder)

            #generate a random filename, so that all filenames are unique and overwriting becomes a non-issue
            random_filename = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(32)])+'.nk'
            filepath = os.path.join(user_folder, random_filename)


            #save the nuke script with selected nodes
            nuke.nodeCopy(filepath)

            #print the path to the temp nuke script to the scriptEditor
            print(('tempShare: ',filepath))

            #copy the filepath to the clipboard (ctrl+v is how you import other users shared files)
            QtWidgets.QApplication.clipboard().setText(filepath)

            # confirmation pop up box so user see that something was shared
            nuke.message('tempShare script saved.\n\n use ctrl+v to share or update fxT_shareNodes to see it there.\n\n')

        else:
            nuke.message('No selected nodes, select the nodes you want to share and try again!')
            pass


        #this is a work in progress to not allow more than 10 files in each users folder...
        #if there are more files in the users share folder than 10, delete these files so not make the folder huge
        max_Files = 10
         
        def sorted_ls(user_folder):
            mtime = lambda f: os.stat(os.path.join(user_folder, f)).st_mtime
            return list(sorted(os.listdir(user_folder), key=mtime))
         
        del_list = sorted_ls(user_folder)[0:(len(sorted_ls(user_folder))-max_Files)]
         
        for dfile in del_list:
            os.remove(user_folder + dfile)




    def update(self):

        #find users in shareFolder
        shareRoot = self.tempPath
        global user_list
        user_list = os.listdir(shareRoot)
        user_list.pop(0)
        #print user_list  #helper to see that users are being grabbed correcly

        #list out the latest tempShare file for all users with a tempShare folder
        all_tempShares= []
        global all_tempSharesList
        all_tempSharesList = []
        for i in user_list:
            list_of_files = glob.glob(shareRoot+i+'/*.nk') # * means all if need specific format then *.extension
            latest_file = max(list_of_files, key=os.path.getctime)
            all_tempShares.append(i+':     \n\n'+latest_file)
            all_tempSharesList.append(latest_file)


        #make global variable so it can be used outside this function
        global allPaths
        allPaths = '\n\n'.join(all_tempShares)



    #force rebuild panel so the right value shows in the text window and dropdown list
    def knobChanged(self, knob):
        if knob == self.updateButton:

            self.removeKnob(self.dropdown)
            self.dropdown.setValues(user_list)
            self.removeKnob(self.lastShare)

            self.removeKnob(self.divline03)
            self.removeKnob(self.copyright)


            self.addKnob(self.dropdown)
            self.addKnob(self.lastShare)
            self.lastShare.setValue('choose user from the dropdown to see path')
            self.addKnob(self.divline03)
            self.addKnob(self.copyright)



        if knob.name() == 'Users':

            #grab the value of the current user dropdown 
            self.dropdown.setValue(int(knob.getValue()))
            num = int(knob.getValue())

            #set correct path to users latest tempShare file in the textfield
            self.lastShare.setValue(str(all_tempSharesList[num]))
            
            #push the users last tempShare path to the clipboard 
            QtWidgets.QApplication.clipboard().setText(str(all_tempSharesList[num]))




# add to pane
def addPanel():
    return nukeShare().addToPane()


menu = nuke.menu('Pane')
menu.addCommand('fxt_shareNodes', addPanel)
nukescripts.registerPanel('com.fxt.fxT_shareNodes', addPanel)

